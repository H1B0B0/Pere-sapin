name: Deploy with Helm

on:
  workflow_run:
    workflows: ["Build and Push Docker Images"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: "latest"

      - name: Set up Kubeconfig
        run: |
          echo "$KUBECONFIG_DATA" > kubeconfig
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}

      - name: Prepare lowercase owner
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Derive image tag from triggering run
        run: |
          REF="${{ github.event.workflow_run.ref }}"
          # REF examples:
          #   refs/tags/v1.2.3
          #   refs/tags/1.2.3
          #   refs/heads/main
          #   refs/heads/feature/super-truc
          RAW="${REF#refs/tags/}"
          if [ "$RAW" = "$REF" ]; then
            RAW="${REF#refs/heads/}"
            # Branche -> on remplace les slashes
            RAW="${RAW//\//-}"
          fi
          # On ne touche pas au préfixe 'v' si présent
          echo "IMAGE_TAG=$RAW" >> $GITHUB_ENV
          echo "Resolved IMAGE_TAG=$RAW"

      - name: Deploy backend with Helm
        run: |
          helm upgrade --install backend ./helm-charts/backend \
            --set image.repository=ghcr.io/${{ env.OWNER_LC }}/pere-sapin-backend \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --set secrets.jwtSecret="${{ secrets.JWT_SECRET }}" \
            --kubeconfig kubeconfig

      - name: Deploy frontend with Helm
        run: |
          helm upgrade --install frontend ./helm-charts/frontend \
            --set image.repository=ghcr.io/${{ env.OWNER_LC }}/pere-sapin-frontend \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --kubeconfig kubeconfig
