# kube-prometheus-stack values for pere-sapin monitoring

nameOverride: ""
fullnameOverride: ""

# Prometheus configuration
prometheus:
  prometheusSpec:
    # Retention policy
    retention: 15d
    retentionSize: 10GB
    
    # Storage
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: default
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 15Gi
    
    # Resources
    resources:
      requests:
        memory: 400Mi
        cpu: 200m
      limits:
        memory: 800Mi
        cpu: 500m
    
    # Service monitor selector
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    
    # External labels
    externalLabels:
      cluster: "pere-sapin"
      environment: "production"

  # Ingress for Prometheus UI
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: prometheus-basic-auth
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    hosts:
      - prometheus.pere-sapin.local
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.pere-sapin.local

# Alertmanager configuration
alertmanager:
  alertmanagerSpec:
    # Storage
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: default
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 2Gi
    
    # Resources
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 200m

  # Ingress for Alertmanager UI
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: alertmanager-basic-auth
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    hosts:
      - alertmanager.pere-sapin.local
    tls:
      - secretName: alertmanager-tls
        hosts:
          - alertmanager.pere-sapin.local

  # Basic alertmanager config
  config:
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alertmanager@pere-sapin.com'
    
    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
    
    receivers:
      - name: 'web.hook'
        email_configs:
          - to: 'admin@pere-sapin.com'
            subject: '[ALERT] {{ .GroupLabels.alertname }}'
            body: |
              {{ range .Alerts }}
              Alert: {{ .Annotations.summary }}
              Description: {{ .Annotations.description }}
              {{ end }}

# Grafana configuration
grafana:
  enabled: true
  
  # Admin credentials
  adminPassword: changeme123!
  
  # Persistence
  persistence:
    enabled: true
    type: pvc
    storageClassName: default
    accessModes:
      - ReadWriteOnce
    size: 5Gi
  
  # Resources
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 256Mi
      cpu: 200m
  
  # Ingress
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - grafana.pere-sapin.local
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.pere-sapin.local
  
  # Default dashboards
  defaultDashboardsEnabled: true
  
  # Additional data sources
  additionalDataSources:
    - name: Loki
      type: loki
      url: http://loki:3100
      access: proxy
  
  # Grafana configuration
  grafana.ini:
    server:
      root_url: https://grafana.pere-sapin.local
    security:
      allow_embedding: true
    auth.anonymous:
      enabled: false

# Node Exporter
nodeExporter:
  enabled: true
  
# kube-state-metrics
kubeStateMetrics:
  enabled: true

# Prometheus Operator
prometheusOperator:
  enabled: true
  
  # Resources
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 256Mi
      cpu: 200m

# Additional ServiceMonitors for custom applications
additionalServiceMonitors:
  - name: pere-sapin-backend
    selector:
      matchLabels:
        app: pere-sapin-backend
    endpoints:
      - port: metrics
        path: /metrics
        interval: 30s
  
  - name: pere-sapin-frontend
    selector:
      matchLabels:
        app: pere-sapin-frontend
    endpoints:
      - port: metrics
        path: /metrics
        interval: 30s

# Custom rules for pere-sapin application
additionalPrometheusRules:
  - name: pere-sapin-rules
    groups:
      - name: pere-sapin.rules
        rules:
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High error rate detected"
              description: "Error rate is above 10% for 5 minutes"
          
          - alert: HighMemoryUsage
            expr: container_memory_usage_bytes{container!="POD",container!=""} / container_spec_memory_limit_bytes > 0.9
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage detected"
              description: "Container {{ $labels.container }} memory usage is above 90%"
          
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Pod is crash looping"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is crash looping"

# Cleanup on uninstall
cleanupOnUninstall: true